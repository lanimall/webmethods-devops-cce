#######################################
# Integration Server Central Users
#######################################

# run-time variable= server/cluster/docker
environment.type=${environment.type}

### target nodes
nodes=${target.nodes}

### specific configs
is.instance.name=${is.instance.name}

jms.connection.alias=${jms.connection.alias}
jms.connection.description=${jms.connection.description}
jms.connection.enabled=${jms.connection.enabled}

## NO_TRANSACTION / etc...
jms.connection.transaction_type=${jms.connection.transaction_type} 

jms.connection.clientid=${jms.connection.clientid}
jms.connection.user=${jms.connection.user}
jms.connection.password=${jms.connection.password}
jms.connection.retries.max=${jms.connection.retries.max}
jms.connection.retries.interval=${jms.connection.retries.interval}

## ENABLED / DISABLED
jms.connection.caching.state=${jms.connection.caching.state}
jms.connection.jndi.alias=${jms.connection.jndi.alias}
jms.connection.jndi.factory.name=${jms.connection.jndi.factory.name}

jms.connection.props.jndi_enableFollowTheMaster=${jms.connection.props.jndi_enableFollowTheMaster}
jms.connection.props.csqSize=${jms.connection.props.csqSize}
jms.connection.props.csqDrainInOrder=${jms.connection.props.csqDrainInOrder}
jms.connection.props.optTempQueueCreate=${jms.connection.props.optTempQueueCreate}
jms.connection.props.allowReplyToConsumer=${jms.connection.props.allowReplyToConsumer}
jms.connection.props.manageDestinations=${jms.connection.props.manageDestinations}
jms.connection.props.allowNewConnectionPerTrigger=${jms.connection.props.allowNewConnectionPerTrigger}